import win32com.client as com
import os

escape_dict={'\a':r'\a',
           '\b':r'\b',
           '\c':r'\c',
           '\f':r'\f',
           '\n':r'\n',
           '\r':r'\r',
           '\t':r'\t',
           '\v':r'\v',
           '\'':r'\'',
           '\"':r'\"',
           '\0':r'\0',
           '\1':r'\1',
           '\2':r'\2',
           '\3':r'\3',
           '\4':r'\4',
           '\5':r'\5',
           '\6':r'\6',
           '\7':r'\7',
           '\8':r'\8',
           '\9':r'\9', ' ':r' '}

def raw(text):
    """Returns a raw string representation of text"""
    new_string=''
    for char in text:
        try: new_string+=escape_dict[char]
        except KeyError: new_string+=char
    return new_string

def noHidden(path):
    if '$' in path:
        return True
    elif '.' in path:
        return True
            
rootdir = 'C:/'

# The next 5 lines were from a forum, I am using them as a pattern to build off of.
#for subdir, dirs, files in os.walk(rootdir):
#for dirs in os.walk(rootdir):
    #print(dirs)
    #for file in files:
        #print(os.path.join(subdir, file))

menu = os.listdir('C:/')
print(menu)
for item in menu:
   
    #if item == '$Recycle.Bin':
        #continue
    #if item == 'Config.Msi':
        #continue
    dPath = 'C:/'+item
    rawPath=raw(dPath)
    
    if os.path.isfile(dPath) == True:
        continue
    elif noHidden(item):
        continue
    print(dPath)
    #folderPath = r(dirPath)
    fso = com.Dispatch("Scripting.FileSystemObject")
    folder = fso.GetFolder(rawPath)
    MB=1024*1024.0
    try:
        print(rawPath + ' contains %.2f MB of data.'%(folder.Size/MB))
    except:
        continue



# This is the original code that I lifted from some other forum.      

#folderPath = r"D:\Software\Downloads"
#fso = com.Dispatch("Scripting.FileSystemObject")
#folder = fso.GetFolder(folderPath)
#MB=1024*1024.0
#print  "%.2f MB"%(folder.Size/MB)
